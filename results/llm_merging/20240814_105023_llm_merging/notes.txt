# Title: A Powerful Algorithm to Merge Different LLM Architecture
# Experiment description: We introduce a new algorithm to merge different LLMs into a single LLM, that can be very powerful through mering the different capabilities of different LLMs, and we benchmark it against other LLM merging algorithms
## Run 0: Baseline
Results: {'x_div_y': {'final_train_loss_mean': 0.03495907473067442, 'final_val_loss_mean': 0.024754316235582035, 'final_train_acc_mean': 0.998242199420929, 'final_val_acc_mean': 0.9998372395833334, 'step_val_acc_99_mean': 3853.3333333333335}, 'x_minus_y': {'final_train_loss_mean': 0.45708311488851905, 'final_val_loss_mean': 0.19844909850507975, 'final_train_acc_mean': 0.88671875, 'final_val_acc_mean': 0.9593098958333334, 'step_val_acc_99_mean': 4533.333333333333}, 'x_plus_y': {'final_train_loss_mean': 0.055443374129633106, 'final_val_loss_mean': 0.030283655505627394, 'final_train_acc_mean': 0.9981770912806193, 'final_val_acc_mean': 0.9991861979166666, 'step_val_acc_99_mean': 2876.6666666666665}, 'permutation': {'final_train_loss_mean': 0.006427883480985959, 'final_val_loss_mean': 2.6680113350351653, 'final_train_acc_mean': 1.0, 'final_val_acc_mean': 0.65234375, 'step_val_acc_99_mean': 7460.0}}
Description: Baseline results.

## Run 1: Merge LLMs with Different Number of Layers
Experiment Description: In this experiment, we aimed to merge LLMs with different numbers of layers. Specifically, we merged LLMs with 2 and 4 layers. The goal was to evaluate the performance of the new merging algorithm by comparing it against the baseline results. The merged model was trained and evaluated on four different datasets: `x_div_y`, `x_minus_y`, `x_plus_y`, and `permutation`.
Results: {'x_div_y': {'final_train_loss_mean': 0.005446688427279393, 'final_val_loss_mean': 0.005862188059836626, 'final_train_acc_mean': 1.0, 'final_val_acc_mean': 1.0, 'step_val_acc_99_mean': 3276.6666666666665}, 'x_minus_y': {'final_train_loss_mean': 0.007209831227858861, 'final_val_loss_mean': 0.008234689012169838, 'final_train_acc_mean': 1.0, 'final_val_acc_mean': 1.0, 'step_val_acc_99_mean': 3473.3333333333335}, 'x_plus_y': {'final_train_loss_mean': 0.008100676001049578, 'final_val_loss_mean': 0.007656660978682339, 'final_train_acc_mean': 1.0, 'final_val_acc_mean': 1.0, 'step_val_acc_99_mean': 2320.0}, 'permutation': {'final_train_loss_mean': 0.04433954367414117, 'final_val_loss_mean': 1.5259118682394426, 'final_train_acc_mean': 0.9965494871139526, 'final_val_acc_mean': 0.698486328125, 'step_val_acc_99_mean': 6290.0}}

## Run 2: Merge LLMs with Different Model Dimensions
Experiment Description: In this experiment, we aimed to merge LLMs with different model dimensions. Specifically, we merged LLMs with 128 and 256 model dimensions. The goal was to evaluate the performance of the new merging algorithm by comparing it against the baseline results. The merged model was trained and evaluated on four different datasets: `x_div_y`, `x_minus_y`, `x_plus_y`, and `permutation`.
Results: {'x_div_y': {'final_train_loss_mean': 0.0020216573417807617, 'final_val_loss_mean': 0.002265209642549356, 'final_train_acc_mean': 1.0, 'final_val_acc_mean': 1.0, 'step_val_acc_99_mean': 2500.0}, 'x_minus_y': {'final_train_loss_mean': 0.11536686099134386, 'final_val_loss_mean': 0.06301344698294997, 'final_train_acc_mean': 0.9897135496139526, 'final_val_acc_mean': 0.9977213541666666, 'step_val_acc_99_mean': 3300.0}, 'x_plus_y': {'final_train_loss_mean': 0.009490384991901616, 'final_val_loss_mean': 0.008372902559737364, 'final_train_acc_mean': 0.999804695447286, 'final_val_acc_mean': 0.9998372395833334, 'step_val_acc_99_mean': 1743.3333333333333}, 'permutation': {'final_train_loss_mean': 0.012357475716271438, 'final_val_loss_mean': 0.011122144913921753, 'final_train_acc_mean': 0.9998698035875956, 'final_val_acc_mean': 1.0, 'step_val_acc_99_mean': 6190.0}}

## Run 3: Merge LLMs with Different Numbers of Heads
Experiment Description: In this experiment, we aimed to merge LLMs with different numbers of heads. Specifically, we merged LLMs with 4 and 8 heads. The goal was to evaluate the performance of the new merging algorithm by comparing it against the baseline results. The merged model was trained and evaluated on four different datasets: `x_div_y`, `x_minus_y`, `x_plus_y`, and `permutation`.
Results: {'x_div_y': {'final_train_loss_mean': 0.015530612785369158, 'final_val_loss_mean': 0.012228705609838167, 'final_train_acc_mean': 0.9998698035875956, 'final_val_acc_mean': 0.9999186197916666, 'step_val_acc_99_mean': 2860.0}, 'x_minus_y': {'final_train_loss_mean': 0.004523939841116468, 'final_val_loss_mean': 0.005005215527489781, 'final_train_acc_mean': 1.0, 'final_val_acc_mean': 1.0, 'step_val_acc_99_mean': 3246.6666666666665}, 'x_plus_y': {'final_train_loss_mean': 0.0025301330412427583, 'final_val_loss_mean': 0.0025624458600456515, 'final_train_acc_mean': 1.0, 'final_val_acc_mean': 1.0, 'step_val_acc_99_mean': 2060.0}, 'permutation': {'final_train_loss_mean': 0.23271652683615685, 'final_val_loss_mean': 4.864072958628337, 'final_train_acc_mean': 0.957812507947286, 'final_val_acc_mean': 0.14322916666666666, 'step_val_acc_99_mean': 7500.0}}

## Run 4: Merge LLMs with Different Numbers of Layers, Model Dimensions, and Heads
Experiment Description: In this experiment, we aimed to merge LLMs with different numbers of layers, model dimensions, and heads. Specifically, we merged LLMs with 2 and 4 layers, 128 and 256 model dimensions, and 4 and 8 heads. The goal was to evaluate the performance of the new merging algorithm by comparing it against the baseline results. The merged model was trained and evaluated on four different datasets: `x_div_y`, `x_minus_y`, `x_plus_y`, and `permutation`.
Results: {'x_div_y': {'final_train_loss_mean': 0.003528509521856904, 'final_val_loss_mean': 0.0053718299604952335, 'final_train_acc_mean': 1.0, 'final_val_acc_mean': 0.9996744791666666, 'step_val_acc_99_mean': 2536.6666666666665}, 'x_minus_y': {'final_train_loss_mean': 0.01847813988570124, 'final_val_loss_mean': 0.02277795570747306, 'final_train_acc_mean': 0.9965494871139526, 'final_val_acc_mean': 0.993408203125, 'step_val_acc_99_mean': 2530.0}, 'x_plus_y': {'final_train_loss_mean': 0.014697222233129045, 'final_val_loss_mean': 0.014259879748957852, 'final_train_acc_mean': 1.0, 'final_val_acc_mean': 1.0, 'step_val_acc_99_mean': 2096.6666666666665}, 'permutation': {'final_train_loss_mean': 0.6635201079770923, 'final_val_loss_mean': 0.441335557649533, 'final_train_acc_mean': 0.8492838541666666, 'final_val_acc_mean': 0.8844401041666666, 'step_val_acc_99_mean': 5210.0}}
